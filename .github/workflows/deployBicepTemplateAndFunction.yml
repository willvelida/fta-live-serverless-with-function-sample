name: Deploy Azure Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Bicep Linter
        run: az bicep build --file ./deploy/main.bicep

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/arm-deploy@v1
        name: Run preflight validation
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deploy/main.bicep
          deploymentMode: Validate

  preview:
    runs-on: ubuntu-latest
    needs: [lint, validate]
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: Azure/cli@v1
        name: Run what-if
        with:
          inlineScript: |
            az deployment group what-if --resource-group ${{ secrets.AZURE_RG }} --template-file ./deploy/main.bicep
  deploy:
    runs-on: ubuntu-latest
    environment: Dev
    needs: preview
    steps:
      - uses: actions/checkout@v2

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Deploy Bicep File
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deploy/main.bicep
          failOnStdErr: false

    build-function:
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2
        
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Publish Functions
        run: dotnet publish ./src/WeatherStation/WeatherStation/WeatherStation.csproj --configuration Release --output ${{ env.OUTPUT_PATH }}
        
      - name: Package Functions
        uses: actions/upload-artifact@v1
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}

    deploy-function:
      runs-on: ubuntu-latest
      needs: [build-function]
      env:
        FUNC_APP_NAME: 4i3e3n6v2y7fg-fa
        
      steps:
        - name: Download Artifact
          uses: actions/download-artifact@v1
          with:
            name: functions
            path: ${{ env.OUTPUT_PATH }}
          
        - name: "Login via Azure CLI"
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
          
        - name: Deploy Function to Azure
          uses: Azure/functions-action@v1
          with:
            app-name: ${{ env.FUNC_APP_NAME }}
            package: ${{ env.OUTPUT_PATH }}
